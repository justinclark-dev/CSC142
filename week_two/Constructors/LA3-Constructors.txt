Justin Clark
LA 3: Constructors

1. Declaration and instantiation need to come first because this is 
   how we create a snowman object, and there must first be an object 
   before we can do anything with it.  The variable declaration creates
   a reference for the location in memory of the object, and the
   instantiation creates a new instance of a snowman object.

2. The buildSnowman() method must be called first.

3. No, the order of the other method calls do not matter.

4. The buildSnowman() method must be called first because it creates
   the window, face, and body objects which must be present in order
   for the other methods to have something to add to.

5. Adding this constructor changes the behavior of the SnowmanII class
   by the constructor automatically calling the buildSnowman() method 
   itself. Because of this, we no longer call buildSnowman() from the 
   application method.  The order of calling the other 3 methods is 
   still not important.

6. This version behaves differently because it causes a compilation 
   error: "cannot find symbol" this is because the method buildSnowman()
   no longer exists.

7. Yes, this version behaves differently because it causes another 
   compilation error: "invalid method declaration; return type 
   required".  Methods Always require a return type.  
   
8. Again we observe different behavior, this time getting the "cannot
   find symbol" compilation error again.  This time, it is because
   we changed the method name to be the same as the class name which
   causes the method to be treated as the constructor, and constructors
   cannot have a return type.